// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ksoichiro.console.reporter'
def nexusUID = System.getenv("CN_NEXUS_UID") ? System.getenv("CN_NEXUS_UID") : nexusUID
def nexusPWD = System.getenv("CN_NEXUS_PWD") ? System.getenv("CN_NEXUS_PWD") : nexusPWD

def JVM_ARGS = project.hasProperty("JVM_ARGS") ? JVM_ARGS : "-Xmx4g"
JVM_ARGS = System.getenv("JVM_ARGS") ? System.getenv("JVM_ARGS") : JVM_ARGS
JVM_ARGS = JVM_ARGS == null ? "-Xmx4g" : JVM_ARGS
def MAX_PARALLEL_FORKS = project.hasProperty("MAX_PARALLEL_FORKS") ? Integer.parseInt(MAX_PARALLEL_FORKS) : 1
MAX_PARALLEL_FORKS = System.getenv("MAX_PARALLEL_FORKS") ? Integer.parseInt(System.getenv("MAX_PARALLEL_FORKS")) : MAX_PARALLEL_FORKS
def TWITTER_CALLBACK_URI = System.getenv("TWITTER_CALLBACK_URI") ? System.getenv("TWITTER_CALLBACK_URI") : TWITTER_CALLBACK_URI
def TWITTER_SECRET = System.getenv("TWITTER_SECRET") ? System.getenv("TWITTER_SECRET") : TWITTER_SECRET
def TWITTER_API_KEY = System.getenv("TWITTER_API_KEY") ? System.getenv("TWITTER_API_KEY") : TWITTER_API_KEY


System.out.println("------ Run Configuration")
System.out.println(JVM_ARGS)
System.out.println(MAX_PARALLEL_FORKS)
System.out.println("Run Configuration ------")


buildscript {
    ext.kotlin_version = '1.3.41'

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.fabric.io/public'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.github.ksoichiro:gradle-console-reporter:0.6.2'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath "com.github.triplet.gradle:play-publisher:2.2.1"
        classpath 'de.felixschulze.gradle:gradle-hockeyapp-plugin:3.6'
        classpath 'com.google.gms:google-services:4.3.0'
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.3.2.0"
        classpath 'io.fabric.tools:gradle:1.26.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath 'com.adarshr:gradle-test-logger-plugin:1.7.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            url "https://nexus.coinninja.net/repository/maven-releases/"
            credentials {
                username nexusUID
                password nexusPWD
            }
        }

        maven {
            url 'https://maven.google.com/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }

    }

    tasks.withType(Test) {
        maxParallelForks = MAX_PARALLEL_FORKS
    }

    apply plugin: 'kotlin-allopen'

    allOpen {
        annotations("app.dropbit.annotations.Mockable", "app.coinninja.annotations.Mockable")
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    // App Configuration
    minSdkVersion = 21
    targetSdkVersion = 28
    buildToolsVersion = "28.0.3"
    compileSdkVersion = 28

    // Compile Settings
    jvmArgs = JVM_ARGS

    // Dependency Versions
    retrofit_version = "2.5.0"
    junit_version = "4.12"
    appcompat_version = "1.1.0-beta01"
    material_version = "1.1.0-alpha09"
    constraintLayout_version = "1.1.3"
    dagger_version = "2.22.1"
    androidx_runner_version = "1.1.1"
    robolectric_version = "4.2"
    espresso_core_version = "3.2.0-beta01"
    //espresso_core_version = "3.2.0-alpha04"
    androidx_fragment_testing_version = "1.1.0-beta01"
    //androidx_fragment_testing_version = "1.1.0-alpha06"
    expresso_intents_version = "3.1.1"

    // shared vars
    twitterApiKey = TWITTER_API_KEY
    twitterSecret = TWITTER_SECRET
    twitterCallbackUri = TWITTER_CALLBACK_URI
}


