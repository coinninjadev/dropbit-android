apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven'
apply plugin: 'maven-publish'

def nexusUID = System.getenv("CN_NEXUS_UID") ? System.getenv("CN_NEXUS_UID") : nexusUID
def nexusPWD = System.getenv("CN_NEXUS_PWD") ? System.getenv("CN_NEXUS_PWD") : nexusPWD


def currentVersion = "1.0.0"
int MILLIS_IN_MINUTE = 1000 * 60
int minutesSinceEpoch = System.currentTimeMillis() / MILLIS_IN_MINUTE

android {
    buildToolsVersion rootProject.buildToolsVersion
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode minutesSinceEpoch
        versionName currentVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "TWITTER_CALLBACK_URI", "\"${rootProject.twitterCallbackUri}\""
        buildConfigField "String", "TWITTER_API_KEY", "\"${rootProject.twitterApiKey}\""
        buildConfigField "String", "TWITTER_SECRET", "\"${rootProject.twitterSecret}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                systemProperty "robolectric.logging.enabled", false
                jvmArgs rootProject.jvmArgs
            }
        }
    }

}

dependencies {
    implementation project(":common")
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"


    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayout_version"
    implementation "com.google.android.material:material:$rootProject.material_version"

    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'org.mockito4kotlin:annotation:0.3.0'
    testImplementation "org.json:json:20180813"
    testImplementation "com.squareup.okhttp3:mockwebserver:3.14.1"
    testImplementation "junit:junit:$rootProject.junit_version"
    testImplementation "androidx.test:core:$rootProject.androidx_test_version"
    testImplementation "androidx.test.ext:junit:$rootProject.androidx_test_version"
    testImplementation "androidx.test.ext:truth:$rootProject.androidx_test_version"
    testImplementation "androidx.test:rules:$rootProject.androidx_runner_version"
    testImplementation "androidx.test:runner:$rootProject.androidx_runner_version"
    testImplementation "com.google.truth:truth:0.42"
    testImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_core_version"
    implementation "androidx.fragment:fragment-testing:$rootProject.androidx_fragment_testing_version"
    //--https://issuetracker.google.com/issues/122321150
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    testImplementation "org.robolectric:robolectric:$rootProject.robolectric_version"
    testImplementation "org.mockito:mockito-core:2.23.0"
    testImplementation "androidx.test.espresso:espresso-intents:3.1.1"
    testImplementation "org.hamcrest:java-hamcrest:2.0.0.0"

}

publishing {
    repositories {
        maven {
            url "https://nexus.coinninja.net/repository/maven-releases/"
            credentials {
                username = nexusUID
                password = nexusPWD
            }
        }

    }
    publications {
        maven(MavenPublication) {
            groupId = "app.dropbit"
            artifactId = "twitter"
            version = currentVersion
            artifact("$buildDir/outputs/aar/twitter-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

}
